#!/bin/bash

# === CONFIGURATION ===
DB_USER="trtel.backup"
DB_PASS="Telus2017#"
DB_NAME="ti_db_inventory"
REPORT_DATE=$(date -d "yesterday" '+%Y-%m-%d')
DIR="backup"
mkdir -p "${DIR}"
emailFile="${DIR}/daily_backup_report.html"

# === EXECUTIVE METRICS ===
read total_count error_count <<< $(mysql -u"${DB_USER}" -p"${DB_PASS}" -D"${DB_NAME}" -N -e "
SELECT COUNT(*), SUM(IF(size = 0.00 AND size_name = 'B', 1, 0))
FROM daily_backup_report
WHERE backup_date = '${REPORT_DATE}';
")

success_count=$((total_count - error_count))
success_rate=$(awk "BEGIN {printf \"%.1f\", (${success_count}/${total_count})*100}")
error_rate=$(awk "BEGIN {printf \"%.1f\", (${error_count}/${total_count})*100")

total_storage=$(mysql -u"${DB_USER}" -p"${DB_PASS}" -D"${DB_NAME}" -N -e "
SELECT ROUND(SUM(CASE size_name
    WHEN 'B' THEN size/1024/1024/1024
    WHEN 'KB' THEN size/1024/1024
    WHEN 'MB' THEN size/1024
    WHEN 'GB' THEN size
    ELSE 0 END), 2)
FROM daily_backup_report
WHERE backup_date = '${REPORT_DATE}';
")

# === STORAGE PER DB ENGINE ===
engine_storage=$(mysql -u"${DB_USER}" -p"${DB_PASS}" -D"${DB_NAME}" -N -e "
SELECT DB_engine, ROUND(SUM(CASE size_name
    WHEN 'B' THEN size/1024/1024/1024
    WHEN 'KB' THEN size/1024/1024
    WHEN 'MB' THEN size/1024
    WHEN 'GB' THEN size
    ELSE 0 END), 2) AS TotalGB
FROM daily_backup_report
WHERE backup_date = '${REPORT_DATE}'
GROUP BY DB_engine;
")

# === TOP 5 BACKUPS IN GB ===
top_backups=$(mysql -u"${DB_USER}" -p"${DB_PASS}" -D"${DB_NAME}" -e "
SELECT Server, DB_engine, CONCAT(ROUND(SUM(
  CASE size_name
    WHEN 'B' THEN size / 1024 / 1024 / 1024
    WHEN 'KB' THEN size / 1024 / 1024
    WHEN 'MB' THEN size / 1024
    WHEN 'GB' THEN size
    ELSE 0
  END
), 2), ' GB') AS TotalSize
FROM daily_backup_report
WHERE backup_date = '${REPORT_DATE}'
GROUP BY Server, DB_engine
ORDER BY SUM(
  CASE size_name
    WHEN 'B' THEN size / 1024 / 1024 / 1024
    WHEN 'KB' THEN size / 1024 / 1024
    WHEN 'MB' THEN size / 1024
    WHEN 'GB' THEN size
    ELSE 0
  END
) DESC
LIMIT 5;
")

# === HTML REPORT ===
{
echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><style>
body {
  font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
  background-color: #f4f4f4;
  color: #333;
  padding: 20px;
}
.container {
  max-width: 800px;
  margin: auto;
  background-color: #fff;
  padding: 25px;
  border-radius: 12px;
  box-shadow: 0 0 12px rgba(75, 40, 109, 0.15);
  border: 1px solid #e0d6f0;
}
h1 {
  color: #4B286D;
  text-align: center;
  font-size: 26px;
  margin-bottom: 10px;
  border-bottom: 2px solid #4B286D;
  padding-bottom: 5px;
}
.summary-box {
  background-color: #f7f3fb;
  border-left: 6px solid #4B286D;
  border-radius: 8px;
  padding: 15px;
  margin-bottom: 25px;
  font-size: 16px;
}
.bar-container {
  margin-bottom: 20px;
}
.bar-label {
  font-weight: bold;
  margin-bottom: 4px;
}
.bar {
  background-color: #e0d6f0;
  border-radius: 4px;
  overflow: hidden;
}
.bar-fill {
  padding: 6px;
  color: white;
  font-weight: bold;
}
.mysql { background-color: #00B7C3; }
.mssql { background-color: #F4F4F4; color: #333; }
.pgsql { background-color: #4B286D; }
table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 15px;
}
th {
  background-color: #4B286D;
  color: white;
  padding: 10px;
  text-align: left;
}
td {
  padding: 10px;
  border-bottom: 1px solid #eee;
}
tr:nth-child(even) {
  background-color: #f9f9f9;
}
.footer {
  text-align: center;
  margin-top: 40px;
  color: #4B286D;
  font-size: 14px;
  border-top: 1px solid #ccc;
  padding-top: 10px;
}
</style></head><body><div class='container'>"

echo "<h1>Daily Backup Report - ${REPORT_DATE}</h1>"
echo "<div class='summary-box'><strong>Executive Summary:</strong><br>"
echo "<span style='color: #008000;'>Status: HIGH SUCCESS (${success_rate}%)</span><br>"
echo "Total Failures: ${error_count}<br>"
echo "Total Storage: ${total_storage} GB</div>"

echo "<h2>Daily Storage Utilization (GB)</h2><div class='bar-container'>"
max=0
declare -A engine_map
while IFS=$'\t' read -r engine gb; do
  engine_map["$engine"]=$gb
  gb_int=$(printf "%.0f" "$gb")
  (( gb_int > max )) && max=$gb_int
done <<< "$engine_storage"

for engine in "${!engine_map[@]}"; do
  percent=$(awk "BEGIN {printf \"%.0f\", (${engine_map[$engine]} / $max) * 100}")
  class=""
  case "$engine" in
    MYSQL) class="mysql" ;;
    MSSQL) class="mssql" ;;
    PGSQL) class="pgsql" ;;
    *) class="mysql" ;;
  esac
  echo "<div class='bar-label'>${engine}</div>"
  echo "<div class='bar'><div class='bar-fill ${class}' style='width:${percent}%;'>${engine_map[$engine]} GB</div></div>"
done

echo "</div><h2>Top 5 Largest Backups</h2><table><tr><th>Server</th><th>Database Engine</th><th>Size</th></tr>"
echo "${top_backups}" | tail -n +2 | while IFS=$'\t' read -r server engine size; do
  echo "<tr><td>${server}</td><td>${engine}</td><td>${size}</td></tr>"
done
echo "</table><div class='footer'>Report generated by Database Engineering</div></div></body></html>"
} > "${emailFile}"

# === SEND EMAIL ===
{
echo "To: yvette.halili@telusinternational.com"
echo "From: no-reply@telusinternational.com"
echo "MIME-Version: 1.0"
echo "Content-Type: text/html; charset=utf-8"
echo "Subject: Daily Backup Report - ${REPORT_DATE}"
echo ""
cat "${emailFile}"
} | /usr/sbin/sendmail -t

echo " Email sent to yvette.halili@telusinternational.com"
